// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminApproved extends ethereum.Event {
  get params(): AdminApproved__Params {
    return new AdminApproved__Params(this);
  }
}

export class AdminApproved__Params {
  _event: AdminApproved;

  constructor(event: AdminApproved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AdminRevoked extends ethereum.Event {
  get params(): AdminRevoked__Params {
    return new AdminRevoked__Params(this);
  }
}

export class AdminRevoked__Params {
  _event: AdminRevoked;

  constructor(event: AdminRevoked) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class DefaultRoyaltiesUpdated extends ethereum.Event {
  get params(): DefaultRoyaltiesUpdated__Params {
    return new DefaultRoyaltiesUpdated__Params(this);
  }
}

export class DefaultRoyaltiesUpdated__Params {
  _event: DefaultRoyaltiesUpdated;

  constructor(event: DefaultRoyaltiesUpdated) {
    this._event = event;
  }

  get receivers(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get basisPoints(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class ExtensionApproveTransferUpdated extends ethereum.Event {
  get params(): ExtensionApproveTransferUpdated__Params {
    return new ExtensionApproveTransferUpdated__Params(this);
  }
}

export class ExtensionApproveTransferUpdated__Params {
  _event: ExtensionApproveTransferUpdated;

  constructor(event: ExtensionApproveTransferUpdated) {
    this._event = event;
  }

  get extension(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get enabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class ExtensionBlacklisted extends ethereum.Event {
  get params(): ExtensionBlacklisted__Params {
    return new ExtensionBlacklisted__Params(this);
  }
}

export class ExtensionBlacklisted__Params {
  _event: ExtensionBlacklisted;

  constructor(event: ExtensionBlacklisted) {
    this._event = event;
  }

  get extension(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ExtensionRegistered extends ethereum.Event {
  get params(): ExtensionRegistered__Params {
    return new ExtensionRegistered__Params(this);
  }
}

export class ExtensionRegistered__Params {
  _event: ExtensionRegistered;

  constructor(event: ExtensionRegistered) {
    this._event = event;
  }

  get extension(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ExtensionRoyaltiesUpdated extends ethereum.Event {
  get params(): ExtensionRoyaltiesUpdated__Params {
    return new ExtensionRoyaltiesUpdated__Params(this);
  }
}

export class ExtensionRoyaltiesUpdated__Params {
  _event: ExtensionRoyaltiesUpdated;

  constructor(event: ExtensionRoyaltiesUpdated) {
    this._event = event;
  }

  get extension(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receivers(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get basisPoints(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class ExtensionUnregistered extends ethereum.Event {
  get params(): ExtensionUnregistered__Params {
    return new ExtensionUnregistered__Params(this);
  }
}

export class ExtensionUnregistered__Params {
  _event: ExtensionUnregistered;

  constructor(event: ExtensionUnregistered) {
    this._event = event;
  }

  get extension(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MintPermissionsUpdated extends ethereum.Event {
  get params(): MintPermissionsUpdated__Params {
    return new MintPermissionsUpdated__Params(this);
  }
}

export class MintPermissionsUpdated__Params {
  _event: MintPermissionsUpdated;

  constructor(event: MintPermissionsUpdated) {
    this._event = event;
  }

  get extension(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get permissions(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoyaltiesUpdated extends ethereum.Event {
  get params(): RoyaltiesUpdated__Params {
    return new RoyaltiesUpdated__Params(this);
  }
}

export class RoyaltiesUpdated__Params {
  _event: RoyaltiesUpdated;

  constructor(event: RoyaltiesUpdated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get receivers(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get basisPoints(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Contract1155__getFeesResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getValue0(): Array<Address> {
    return this.value0;
  }

  getValue1(): Array<BigInt> {
    return this.value1;
  }
}

export class Contract1155__getRoyaltiesResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getValue0(): Array<Address> {
    return this.value0;
  }

  getValue1(): Array<BigInt> {
    return this.value1;
  }
}

export class Contract1155__royaltyInfoResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class Contract1155 extends ethereum.SmartContract {
  static bind(address: Address): Contract1155 {
    return new Contract1155("Contract1155", address);
  }

  balanceOf(account: Address, id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address, id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(accounts: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    accounts: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getAdmins(): Array<Address> {
    let result = super.call("getAdmins", "getAdmins():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getAdmins(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getAdmins", "getAdmins():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getExtensions(): Array<Address> {
    let result = super.call("getExtensions", "getExtensions():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getExtensions(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getExtensions",
      "getExtensions():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getFeeBps(tokenId: BigInt): Array<BigInt> {
    let result = super.call("getFeeBps", "getFeeBps(uint256):(uint256[])", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toBigIntArray();
  }

  try_getFeeBps(tokenId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("getFeeBps", "getFeeBps(uint256):(uint256[])", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getFeeRecipients(tokenId: BigInt): Array<Address> {
    let result = super.call(
      "getFeeRecipients",
      "getFeeRecipients(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toAddressArray();
  }

  try_getFeeRecipients(tokenId: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getFeeRecipients",
      "getFeeRecipients(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getFees(tokenId: BigInt): Contract1155__getFeesResult {
    let result = super.call(
      "getFees",
      "getFees(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return new Contract1155__getFeesResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_getFees(
    tokenId: BigInt
  ): ethereum.CallResult<Contract1155__getFeesResult> {
    let result = super.tryCall(
      "getFees",
      "getFees(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract1155__getFeesResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  getRoyalties(tokenId: BigInt): Contract1155__getRoyaltiesResult {
    let result = super.call(
      "getRoyalties",
      "getRoyalties(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return new Contract1155__getRoyaltiesResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_getRoyalties(
    tokenId: BigInt
  ): ethereum.CallResult<Contract1155__getRoyaltiesResult> {
    let result = super.tryCall(
      "getRoyalties",
      "getRoyalties(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract1155__getRoyaltiesResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  isAdmin(admin: Address): boolean {
    let result = super.call("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(admin)
    ]);

    return result[0].toBoolean();
  }

  try_isAdmin(admin: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(admin)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(account: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    account: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mintBaseNew(
    to: Array<Address>,
    amounts: Array<BigInt>,
    uris: Array<string>
  ): Array<BigInt> {
    let result = super.call(
      "mintBaseNew",
      "mintBaseNew(address[],uint256[],string[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(to),
        ethereum.Value.fromUnsignedBigIntArray(amounts),
        ethereum.Value.fromStringArray(uris)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_mintBaseNew(
    to: Array<Address>,
    amounts: Array<BigInt>,
    uris: Array<string>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "mintBaseNew",
      "mintBaseNew(address[],uint256[],string[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(to),
        ethereum.Value.fromUnsignedBigIntArray(amounts),
        ethereum.Value.fromStringArray(uris)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  mintExtensionNew(
    to: Array<Address>,
    amounts: Array<BigInt>,
    uris: Array<string>
  ): Array<BigInt> {
    let result = super.call(
      "mintExtensionNew",
      "mintExtensionNew(address[],uint256[],string[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(to),
        ethereum.Value.fromUnsignedBigIntArray(amounts),
        ethereum.Value.fromStringArray(uris)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_mintExtensionNew(
    to: Array<Address>,
    amounts: Array<BigInt>,
    uris: Array<string>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "mintExtensionNew",
      "mintExtensionNew(address[],uint256[],string[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(to),
        ethereum.Value.fromUnsignedBigIntArray(amounts),
        ethereum.Value.fromStringArray(uris)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyInfo(tokenId: BigInt, value: BigInt): Contract1155__royaltyInfoResult {
    let result = super.call(
      "royaltyInfo",
      "royaltyInfo(uint256,uint256):(address,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(value)
      ]
    );

    return new Contract1155__royaltyInfoResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_royaltyInfo(
    tokenId: BigInt,
    value: BigInt
  ): ethereum.CallResult<Contract1155__royaltyInfoResult> {
    let result = super.tryCall(
      "royaltyInfo",
      "royaltyInfo(uint256,uint256):(address,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(value)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract1155__royaltyInfoResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenExtension(tokenId: BigInt): Address {
    let result = super.call(
      "tokenExtension",
      "tokenExtension(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toAddress();
  }

  try_tokenExtension(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenExtension",
      "tokenExtension(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalSupply(tokenId: BigInt): BigInt {
    let result = super.call("totalSupply", "totalSupply(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toBigInt();
  }

  try_totalSupply(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalSupply",
      "totalSupply(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uri(tokenId: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_uri(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ApproveAdminCall extends ethereum.Call {
  get inputs(): ApproveAdminCall__Inputs {
    return new ApproveAdminCall__Inputs(this);
  }

  get outputs(): ApproveAdminCall__Outputs {
    return new ApproveAdminCall__Outputs(this);
  }
}

export class ApproveAdminCall__Inputs {
  _call: ApproveAdminCall;

  constructor(call: ApproveAdminCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ApproveAdminCall__Outputs {
  _call: ApproveAdminCall;

  constructor(call: ApproveAdminCall) {
    this._call = call;
  }
}

export class BlacklistExtensionCall extends ethereum.Call {
  get inputs(): BlacklistExtensionCall__Inputs {
    return new BlacklistExtensionCall__Inputs(this);
  }

  get outputs(): BlacklistExtensionCall__Outputs {
    return new BlacklistExtensionCall__Outputs(this);
  }
}

export class BlacklistExtensionCall__Inputs {
  _call: BlacklistExtensionCall;

  constructor(call: BlacklistExtensionCall) {
    this._call = call;
  }

  get extension(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class BlacklistExtensionCall__Outputs {
  _call: BlacklistExtensionCall;

  constructor(call: BlacklistExtensionCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MintBaseExistingCall extends ethereum.Call {
  get inputs(): MintBaseExistingCall__Inputs {
    return new MintBaseExistingCall__Inputs(this);
  }

  get outputs(): MintBaseExistingCall__Outputs {
    return new MintBaseExistingCall__Outputs(this);
  }
}

export class MintBaseExistingCall__Inputs {
  _call: MintBaseExistingCall;

  constructor(call: MintBaseExistingCall) {
    this._call = call;
  }

  get to(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class MintBaseExistingCall__Outputs {
  _call: MintBaseExistingCall;

  constructor(call: MintBaseExistingCall) {
    this._call = call;
  }
}

export class MintBaseNewCall extends ethereum.Call {
  get inputs(): MintBaseNewCall__Inputs {
    return new MintBaseNewCall__Inputs(this);
  }

  get outputs(): MintBaseNewCall__Outputs {
    return new MintBaseNewCall__Outputs(this);
  }
}

export class MintBaseNewCall__Inputs {
  _call: MintBaseNewCall;

  constructor(call: MintBaseNewCall) {
    this._call = call;
  }

  get to(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get uris(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }
}

export class MintBaseNewCall__Outputs {
  _call: MintBaseNewCall;

  constructor(call: MintBaseNewCall) {
    this._call = call;
  }

  get value0(): Array<BigInt> {
    return this._call.outputValues[0].value.toBigIntArray();
  }
}

export class MintExtensionExistingCall extends ethereum.Call {
  get inputs(): MintExtensionExistingCall__Inputs {
    return new MintExtensionExistingCall__Inputs(this);
  }

  get outputs(): MintExtensionExistingCall__Outputs {
    return new MintExtensionExistingCall__Outputs(this);
  }
}

export class MintExtensionExistingCall__Inputs {
  _call: MintExtensionExistingCall;

  constructor(call: MintExtensionExistingCall) {
    this._call = call;
  }

  get to(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class MintExtensionExistingCall__Outputs {
  _call: MintExtensionExistingCall;

  constructor(call: MintExtensionExistingCall) {
    this._call = call;
  }
}

export class MintExtensionNewCall extends ethereum.Call {
  get inputs(): MintExtensionNewCall__Inputs {
    return new MintExtensionNewCall__Inputs(this);
  }

  get outputs(): MintExtensionNewCall__Outputs {
    return new MintExtensionNewCall__Outputs(this);
  }
}

export class MintExtensionNewCall__Inputs {
  _call: MintExtensionNewCall;

  constructor(call: MintExtensionNewCall) {
    this._call = call;
  }

  get to(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get uris(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }
}

export class MintExtensionNewCall__Outputs {
  _call: MintExtensionNewCall;

  constructor(call: MintExtensionNewCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.outputValues[0].value.toBigIntArray();
  }
}

export class RegisterExtensionCall extends ethereum.Call {
  get inputs(): RegisterExtensionCall__Inputs {
    return new RegisterExtensionCall__Inputs(this);
  }

  get outputs(): RegisterExtensionCall__Outputs {
    return new RegisterExtensionCall__Outputs(this);
  }
}

export class RegisterExtensionCall__Inputs {
  _call: RegisterExtensionCall;

  constructor(call: RegisterExtensionCall) {
    this._call = call;
  }

  get extension(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get baseURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterExtensionCall__Outputs {
  _call: RegisterExtensionCall;

  constructor(call: RegisterExtensionCall) {
    this._call = call;
  }
}

export class RegisterExtension1Call extends ethereum.Call {
  get inputs(): RegisterExtension1Call__Inputs {
    return new RegisterExtension1Call__Inputs(this);
  }

  get outputs(): RegisterExtension1Call__Outputs {
    return new RegisterExtension1Call__Outputs(this);
  }
}

export class RegisterExtension1Call__Inputs {
  _call: RegisterExtension1Call;

  constructor(call: RegisterExtension1Call) {
    this._call = call;
  }

  get extension(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get baseURI(): string {
    return this._call.inputValues[1].value.toString();
  }

  get baseURIIdentical(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class RegisterExtension1Call__Outputs {
  _call: RegisterExtension1Call;

  constructor(call: RegisterExtension1Call) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RevokeAdminCall extends ethereum.Call {
  get inputs(): RevokeAdminCall__Inputs {
    return new RevokeAdminCall__Inputs(this);
  }

  get outputs(): RevokeAdminCall__Outputs {
    return new RevokeAdminCall__Outputs(this);
  }
}

export class RevokeAdminCall__Inputs {
  _call: RevokeAdminCall;

  constructor(call: RevokeAdminCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeAdminCall__Outputs {
  _call: RevokeAdminCall;

  constructor(call: RevokeAdminCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetApproveTransferExtensionCall extends ethereum.Call {
  get inputs(): SetApproveTransferExtensionCall__Inputs {
    return new SetApproveTransferExtensionCall__Inputs(this);
  }

  get outputs(): SetApproveTransferExtensionCall__Outputs {
    return new SetApproveTransferExtensionCall__Outputs(this);
  }
}

export class SetApproveTransferExtensionCall__Inputs {
  _call: SetApproveTransferExtensionCall;

  constructor(call: SetApproveTransferExtensionCall) {
    this._call = call;
  }

  get enabled(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetApproveTransferExtensionCall__Outputs {
  _call: SetApproveTransferExtensionCall;

  constructor(call: SetApproveTransferExtensionCall) {
    this._call = call;
  }
}

export class SetBaseTokenURICall extends ethereum.Call {
  get inputs(): SetBaseTokenURICall__Inputs {
    return new SetBaseTokenURICall__Inputs(this);
  }

  get outputs(): SetBaseTokenURICall__Outputs {
    return new SetBaseTokenURICall__Outputs(this);
  }
}

export class SetBaseTokenURICall__Inputs {
  _call: SetBaseTokenURICall;

  constructor(call: SetBaseTokenURICall) {
    this._call = call;
  }

  get uri_(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseTokenURICall__Outputs {
  _call: SetBaseTokenURICall;

  constructor(call: SetBaseTokenURICall) {
    this._call = call;
  }
}

export class SetBaseTokenURIExtensionCall extends ethereum.Call {
  get inputs(): SetBaseTokenURIExtensionCall__Inputs {
    return new SetBaseTokenURIExtensionCall__Inputs(this);
  }

  get outputs(): SetBaseTokenURIExtensionCall__Outputs {
    return new SetBaseTokenURIExtensionCall__Outputs(this);
  }
}

export class SetBaseTokenURIExtensionCall__Inputs {
  _call: SetBaseTokenURIExtensionCall;

  constructor(call: SetBaseTokenURIExtensionCall) {
    this._call = call;
  }

  get uri_(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseTokenURIExtensionCall__Outputs {
  _call: SetBaseTokenURIExtensionCall;

  constructor(call: SetBaseTokenURIExtensionCall) {
    this._call = call;
  }
}

export class SetBaseTokenURIExtension1Call extends ethereum.Call {
  get inputs(): SetBaseTokenURIExtension1Call__Inputs {
    return new SetBaseTokenURIExtension1Call__Inputs(this);
  }

  get outputs(): SetBaseTokenURIExtension1Call__Outputs {
    return new SetBaseTokenURIExtension1Call__Outputs(this);
  }
}

export class SetBaseTokenURIExtension1Call__Inputs {
  _call: SetBaseTokenURIExtension1Call;

  constructor(call: SetBaseTokenURIExtension1Call) {
    this._call = call;
  }

  get uri_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get identical(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetBaseTokenURIExtension1Call__Outputs {
  _call: SetBaseTokenURIExtension1Call;

  constructor(call: SetBaseTokenURIExtension1Call) {
    this._call = call;
  }
}

export class SetMintPermissionsCall extends ethereum.Call {
  get inputs(): SetMintPermissionsCall__Inputs {
    return new SetMintPermissionsCall__Inputs(this);
  }

  get outputs(): SetMintPermissionsCall__Outputs {
    return new SetMintPermissionsCall__Outputs(this);
  }
}

export class SetMintPermissionsCall__Inputs {
  _call: SetMintPermissionsCall;

  constructor(call: SetMintPermissionsCall) {
    this._call = call;
  }

  get extension(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get permissions(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetMintPermissionsCall__Outputs {
  _call: SetMintPermissionsCall;

  constructor(call: SetMintPermissionsCall) {
    this._call = call;
  }
}

export class SetRoyaltiesCall extends ethereum.Call {
  get inputs(): SetRoyaltiesCall__Inputs {
    return new SetRoyaltiesCall__Inputs(this);
  }

  get outputs(): SetRoyaltiesCall__Outputs {
    return new SetRoyaltiesCall__Outputs(this);
  }
}

export class SetRoyaltiesCall__Inputs {
  _call: SetRoyaltiesCall;

  constructor(call: SetRoyaltiesCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get receivers(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get basisPoints(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SetRoyaltiesCall__Outputs {
  _call: SetRoyaltiesCall;

  constructor(call: SetRoyaltiesCall) {
    this._call = call;
  }
}

export class SetRoyalties1Call extends ethereum.Call {
  get inputs(): SetRoyalties1Call__Inputs {
    return new SetRoyalties1Call__Inputs(this);
  }

  get outputs(): SetRoyalties1Call__Outputs {
    return new SetRoyalties1Call__Outputs(this);
  }
}

export class SetRoyalties1Call__Inputs {
  _call: SetRoyalties1Call;

  constructor(call: SetRoyalties1Call) {
    this._call = call;
  }

  get receivers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get basisPoints(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetRoyalties1Call__Outputs {
  _call: SetRoyalties1Call;

  constructor(call: SetRoyalties1Call) {
    this._call = call;
  }
}

export class SetRoyaltiesExtensionCall extends ethereum.Call {
  get inputs(): SetRoyaltiesExtensionCall__Inputs {
    return new SetRoyaltiesExtensionCall__Inputs(this);
  }

  get outputs(): SetRoyaltiesExtensionCall__Outputs {
    return new SetRoyaltiesExtensionCall__Outputs(this);
  }
}

export class SetRoyaltiesExtensionCall__Inputs {
  _call: SetRoyaltiesExtensionCall;

  constructor(call: SetRoyaltiesExtensionCall) {
    this._call = call;
  }

  get extension(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get receivers(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get basisPoints(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SetRoyaltiesExtensionCall__Outputs {
  _call: SetRoyaltiesExtensionCall;

  constructor(call: SetRoyaltiesExtensionCall) {
    this._call = call;
  }
}

export class SetTokenURICall extends ethereum.Call {
  get inputs(): SetTokenURICall__Inputs {
    return new SetTokenURICall__Inputs(this);
  }

  get outputs(): SetTokenURICall__Outputs {
    return new SetTokenURICall__Outputs(this);
  }
}

export class SetTokenURICall__Inputs {
  _call: SetTokenURICall;

  constructor(call: SetTokenURICall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get uri_(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenURICall__Outputs {
  _call: SetTokenURICall;

  constructor(call: SetTokenURICall) {
    this._call = call;
  }
}

export class SetTokenURI1Call extends ethereum.Call {
  get inputs(): SetTokenURI1Call__Inputs {
    return new SetTokenURI1Call__Inputs(this);
  }

  get outputs(): SetTokenURI1Call__Outputs {
    return new SetTokenURI1Call__Outputs(this);
  }
}

export class SetTokenURI1Call__Inputs {
  _call: SetTokenURI1Call;

  constructor(call: SetTokenURI1Call) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get uris(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class SetTokenURI1Call__Outputs {
  _call: SetTokenURI1Call;

  constructor(call: SetTokenURI1Call) {
    this._call = call;
  }
}

export class SetTokenURIExtensionCall extends ethereum.Call {
  get inputs(): SetTokenURIExtensionCall__Inputs {
    return new SetTokenURIExtensionCall__Inputs(this);
  }

  get outputs(): SetTokenURIExtensionCall__Outputs {
    return new SetTokenURIExtensionCall__Outputs(this);
  }
}

export class SetTokenURIExtensionCall__Inputs {
  _call: SetTokenURIExtensionCall;

  constructor(call: SetTokenURIExtensionCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get uris(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class SetTokenURIExtensionCall__Outputs {
  _call: SetTokenURIExtensionCall;

  constructor(call: SetTokenURIExtensionCall) {
    this._call = call;
  }
}

export class SetTokenURIExtension1Call extends ethereum.Call {
  get inputs(): SetTokenURIExtension1Call__Inputs {
    return new SetTokenURIExtension1Call__Inputs(this);
  }

  get outputs(): SetTokenURIExtension1Call__Outputs {
    return new SetTokenURIExtension1Call__Outputs(this);
  }
}

export class SetTokenURIExtension1Call__Inputs {
  _call: SetTokenURIExtension1Call;

  constructor(call: SetTokenURIExtension1Call) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get uri_(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenURIExtension1Call__Outputs {
  _call: SetTokenURIExtension1Call;

  constructor(call: SetTokenURIExtension1Call) {
    this._call = call;
  }
}

export class SetTokenURIPrefixCall extends ethereum.Call {
  get inputs(): SetTokenURIPrefixCall__Inputs {
    return new SetTokenURIPrefixCall__Inputs(this);
  }

  get outputs(): SetTokenURIPrefixCall__Outputs {
    return new SetTokenURIPrefixCall__Outputs(this);
  }
}

export class SetTokenURIPrefixCall__Inputs {
  _call: SetTokenURIPrefixCall;

  constructor(call: SetTokenURIPrefixCall) {
    this._call = call;
  }

  get prefix(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetTokenURIPrefixCall__Outputs {
  _call: SetTokenURIPrefixCall;

  constructor(call: SetTokenURIPrefixCall) {
    this._call = call;
  }
}

export class SetTokenURIPrefixExtensionCall extends ethereum.Call {
  get inputs(): SetTokenURIPrefixExtensionCall__Inputs {
    return new SetTokenURIPrefixExtensionCall__Inputs(this);
  }

  get outputs(): SetTokenURIPrefixExtensionCall__Outputs {
    return new SetTokenURIPrefixExtensionCall__Outputs(this);
  }
}

export class SetTokenURIPrefixExtensionCall__Inputs {
  _call: SetTokenURIPrefixExtensionCall;

  constructor(call: SetTokenURIPrefixExtensionCall) {
    this._call = call;
  }

  get prefix(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetTokenURIPrefixExtensionCall__Outputs {
  _call: SetTokenURIPrefixExtensionCall;

  constructor(call: SetTokenURIPrefixExtensionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnregisterExtensionCall extends ethereum.Call {
  get inputs(): UnregisterExtensionCall__Inputs {
    return new UnregisterExtensionCall__Inputs(this);
  }

  get outputs(): UnregisterExtensionCall__Outputs {
    return new UnregisterExtensionCall__Outputs(this);
  }
}

export class UnregisterExtensionCall__Inputs {
  _call: UnregisterExtensionCall;

  constructor(call: UnregisterExtensionCall) {
    this._call = call;
  }

  get extension(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnregisterExtensionCall__Outputs {
  _call: UnregisterExtensionCall;

  constructor(call: UnregisterExtensionCall) {
    this._call = call;
  }
}
