type contract @entity {
  id: ID!
  asERC721: collection
}

type account @entity {
  " the wallet address "
  id: ID!

  " The NFTs owned by this account "
  tokens: [token!]! @derivedFrom(field: "owner")

  " The transfers originating from this account "
  transfersFrom: [transfer!]! @derivedFrom(field: "senderAddress")

  " The transfers recevied by this account"
  transfersTo: [transfer!]! @derivedFrom(field: "receiverAddress")

  " M:M relationship for Accounts and Collections "
  holdings: [holding!]! @derivedFrom(field: "account")
}

"replaces TokenRegistry"
type collection @entity {
  " The address of the collection "
  id: ID!

  " The name of the collection "
  name: String

  " The symbol for the collection "
  symbol: String

  " Total Supply of Tokens "
  totalSupply: BigInt

  " Tokens for the collection"
  tokens: [token!]! @derivedFrom(field: "collection")

  " M:M relationship for Accounts and Collections "
  holdings: [holding!]! @derivedFrom(field: "collection")
}

type token @entity {
  " Ethereum / Collection Addrress - Token Id "
  id: ID!

  " The collection address "
  collection: collection!

  " The id of the NFT"
  identifier: BigInt!

  " The address the currently owns the token "
  owner: account

  " Transfers involving this token "
  transfers: [transfer!]! @derivedFrom(field: "token")
}

type holding @entity {
  " Account Id - Collection Id "
  id: ID!

  " Address of the account "
  account: account

  " Address of the NFT Collection "
  collection: collection

  " Count of NFT's owned in a collection by the Address"
  tokenCount: Int!
}

type transfer @entity {
  " Block Number and Event Id in which the transfers event occured"
  id: ID!

  " Transaction hash in which the transfer event occured"
  transaction: Bytes!

  " The collection address "
  collection: collection!

  " The collection addrress - The token id "
  token: token!

  " The sender address "
  senderAddress: account

  " The receiver address "
  receiverAddress: account

  " Timestamp for block "
  timestamp: Int!

  " Block Number "
  blockNumber: Int!
}
